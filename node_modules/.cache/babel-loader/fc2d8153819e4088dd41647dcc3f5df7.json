{"ast":null,"code":"import _slicedToArray from\"/home/keoy/BeSquareFE/intro-to-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from\"react\";import{useToggle}from\"./useToggle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Button(){//USE STATE\nvar _useState=useState(\"click me please\"),_useState2=_slicedToArray(_useState,2),buttonText=_useState2[0],setButtonText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];function incrementCount(){setCount(count+1);}function decrementCount(){setCount(count-1);}//USE REF\nvar inputEl=useRef(null);var intervalRef=useRef();//USE EFFECT\nuseEffect(function(){var id=setInterval(function(){console.log(\"useEffect\");},3000);intervalRef.current=id;return function(){return clearInterval(intervalRef.current);};});//USE TOGGLE\nvar _useToggle=useToggle(false),_useToggle2=_slicedToArray(_useToggle,2),open=_useToggle2[0],toggle=_useToggle2[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\"useState\"}),/*#__PURE__*/_jsx(\"span\",{children:\"rerender component without refresh page\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setButtonText(\"clicked\");},children:buttonText}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:decrementCount,children:\"-\"}),/*#__PURE__*/_jsx(\"h1\",{children:count}),/*#__PURE__*/_jsx(\"button\",{onClick:incrementCount,children:\"+\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\"useRef\"}),/*#__PURE__*/_jsx(\"span\",{children:\"for \\\"behind-the-scenes\\\" stuff (i.e. updating variables) without re-rendering component\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{ref:inputEl}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return inputEl.current.focus();},children:\"Focus the input\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\"useEffect\"}),/*#__PURE__*/_jsx(\"span\",{children:\"(open console)\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\"useToggle\"}),/*#__PURE__*/_jsx(\"span\",{children:\"equivalent of v-if in Vue\"}),/*#__PURE__*/_jsx(\"br\",{}),open&&/*#__PURE__*/_jsx(\"span\",{children:\"JANJAN!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggle,children:\"Toggle\"})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","useToggle","Button","buttonText","setButtonText","count","setCount","incrementCount","decrementCount","inputEl","intervalRef","id","setInterval","console","log","current","clearInterval","open","toggle","display","justifyContent","focus"],"sources":["/home/keoy/BeSquareFE/intro-to-hooks/src/Button.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useToggle } from \"./useToggle\";\n\nexport default function Button() {\n  //USE STATE\n  const [buttonText, setButtonText] = useState(\"click me please\");\n  const [count, setCount] = useState(0);\n  function incrementCount() {\n    setCount(count + 1);\n  }\n  function decrementCount() {\n    setCount(count - 1);\n  }\n\n  //USE REF\n  const inputEl = useRef(null);\n  const intervalRef = useRef();\n\n  //USE EFFECT\n  useEffect(() => {\n    const id = setInterval(() => {\n      console.log(\"useEffect\");\n    }, 3000);\n\n    intervalRef.current = id;\n\n    return () => clearInterval(intervalRef.current);\n  });\n\n  //USE TOGGLE\n  const [open, toggle] = useToggle(false);\n\n  return (\n    <div>\n      <hr />\n      \n      <h1>useState</h1>\n      <span>rerender component without refresh page</span>\n      <button onClick={() => setButtonText(\"clicked\")}>{buttonText}</button>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <button onClick={decrementCount}>-</button>\n        <h1>{count}</h1>\n        <button onClick={incrementCount}>+</button>\n      </div>\n\n      <hr />\n\n      <h1>useRef</h1>\n      <span>\n        for \"behind-the-scenes\" stuff (i.e. updating variables) without\n        re-rendering component\n      </span>\n      <div className=\"flex\">\n        <input ref={inputEl} />\n        <button onClick={() => inputEl.current.focus()}>Focus the input</button>\n      </div>\n\n      <hr />\n\n      <h1>useEffect</h1>\n      <span>(open console)</span>\n\n      <hr />\n      \n      <h1>useToggle</h1>\n      <span>equivalent of v-if in Vue</span>\n      <br />\n      {open && <span>JANJAN!</span>}\n      <button onClick={toggle}>Toggle</button>\n    </div>\n  );\n}\n"],"mappings":"0HAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,SAAT,KAA0B,aAA1B,C,wFAEA,cAAe,SAASC,OAAT,EAAkB,CAC/B;AACA,cAAoCJ,QAAQ,CAAC,iBAAD,CAA5C,wCAAOK,UAAP,eAAmBC,aAAnB,eACA,eAA0BN,QAAQ,CAAC,CAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eACA,QAASC,eAAT,EAA0B,CACxBD,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CACD,QAASG,eAAT,EAA0B,CACxBF,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CAED;AACA,GAAMI,QAAO,CAAGT,MAAM,CAAC,IAAD,CAAtB,CACA,GAAMU,YAAW,CAAGV,MAAM,EAA1B,CAEA;AACAD,SAAS,CAAC,UAAM,CACd,GAAMY,GAAE,CAAGC,WAAW,CAAC,UAAM,CAC3BC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACD,CAFqB,CAEnB,IAFmB,CAAtB,CAIAJ,WAAW,CAACK,OAAZ,CAAsBJ,EAAtB,CAEA,MAAO,kBAAMK,cAAa,CAACN,WAAW,CAACK,OAAb,CAAnB,EAAP,CACD,CARQ,CAAT,CAUA;AACA,eAAuBd,SAAS,CAAC,KAAD,CAAhC,0CAAOgB,IAAP,gBAAaC,MAAb,gBAEA,mBACE,oCACE,aADF,cAGE,gCAHF,cAIE,iEAJF,cAKE,eAAQ,OAAO,CAAE,yBAAMd,cAAa,CAAC,SAAD,CAAnB,EAAjB,UAAkDD,UAAlD,EALF,cAME,aAAK,KAAK,CAAE,CAAEgB,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAAZ,wBACE,eAAQ,OAAO,CAAEZ,cAAjB,eADF,cAEE,oBAAKH,KAAL,EAFF,cAGE,eAAQ,OAAO,CAAEE,cAAjB,eAHF,GANF,cAYE,aAZF,cAcE,8BAdF,cAeE,kHAfF,cAmBE,aAAK,SAAS,CAAC,MAAf,wBACE,cAAO,GAAG,CAAEE,OAAZ,EADF,cAEE,eAAQ,OAAO,CAAE,yBAAMA,QAAO,CAACM,OAAR,CAAgBM,KAAhB,EAAN,EAAjB,6BAFF,GAnBF,cAwBE,aAxBF,cA0BE,iCA1BF,cA2BE,wCA3BF,cA6BE,aA7BF,cA+BE,iCA/BF,cAgCE,mDAhCF,cAiCE,aAjCF,CAkCGJ,IAAI,eAAI,iCAlCX,cAmCE,eAAQ,OAAO,CAAEC,MAAjB,oBAnCF,GADF,CAuCD"},"metadata":{},"sourceType":"module"}